include "../../Armada/ArmadaCommonDefinitions.dfy"

structs SharedStructs2 {

}

level C using SharedStructs2 {
    noaddr var p:ptr<int32>;
    noaddr var v:int32;
    noaddr var w:int32;
    noaddr var x:int32;
    noaddr var y:int32;
    noaddr var z:int32;

    method crasher()
    {
        *p ::= 0;
    }

    method main()
    {
        v ::= 3;
label lbl1:
        w ::= 4;
label lbl2:
        atomic {
            x ::= 5;
            y ::= 6;
        }
label lbl3:
        z ::= 7;
    }
}

level D using SharedStructs2 {
    noaddr var p:ptr<int32>;
    noaddr var v:int32;
    noaddr var w:int32;
    noaddr var x:int32;
    noaddr var y:int32;
    noaddr var z:int32;

    method crasher()
    {
        *p ::= 0;
    }

    method main()
    {
        atomic {
            v ::= 3;
            w ::= 4;
            x ::= 5;
            y ::= 6;
            z ::= 7;
        }
    }
}

proof CD {
    refinement C D
    reduction phase1 main_lbl1 phase2 main_lbl2-main_lbl3

    inductive_invariant MyGlobalInvariant @"
      forall tid :: tid in threads ==> threads[tid].storeBuffer == []
    "
}
