include "../../Armada/ArmadaCommonDefinitions.dfy"

structs SharedStructs2 {

}

level C using SharedStructs2 {
  ghost var x:int := 0;
  ghost var y:int := 0;

  method Test()
  {
    y := y + 1;
  }

  method main()
  {
    y := 4;
    Test();

    x := 3;
label myloop:
    while x < 10
    {
      x := x + 1;
    }
    y := 6;
  }
}

level D using SharedStructs2 {
  ghost var x:int := 0;
  ghost var y:int := 0;

  method Test()
  {
    y := y + 1;
  }

  method main()
  {
    y := 4;
    Test();

    assume y == 5;
    x := 3;
label myloop:
    while x < 10
    {
      x := x + 1;
    }

    assume x == 10;
    y := 6;
  }
}

proof CD {
  refinement C D
  assume_intro

  chl_invariant only_one_thread "forall tid :: tid in threads ==> tid == tid_init"
  chl_yield_pred {:excludeAll} ghosts_unchanged "ghosts' == ghosts"
  chl_precondition Test y_is_four "ghosts.y == 4"
  chl_postcondition Test y_is_five "ghosts'.y == 5"
  chl_loop_modifies main_myloop x_between_3_and_10 "3 <= ghosts'.x <= 10"

}
