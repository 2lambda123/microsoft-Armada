include "../../Armada/ArmadaCommonDefinitions.dfy"

structs SharedStructs3 {

}

level E using SharedStructs3 {
    noaddr var y:int32;
    ghost var z:int := 0;

    method Worker(n:int32)
    {
        noaddr var x:int32;
        x := n;
        atomic {
            y := 4;
            z := 1;
            z := 0;
        }
    }

    method main()
    {
        create_thread Worker(1);
        create_thread Worker(2);
    }
}

level F using SharedStructs3 {
    noaddr var y:int32;
    ghost var z:int := 0;

    method Worker(n:int32)
    {
        noaddr var x:int32;
        x := n;
        atomic {
            assume x == n;
            y := 4;
            z := 1;
            z := 0;
        }
    }

    method main()
    {
        create_thread Worker(1);
        create_thread Worker(2);
    }
}

proof EF {
    refinement E F
    assume_intro

    chl_invariant z_always_zero "s.s.ghosts.z == 0"
}
